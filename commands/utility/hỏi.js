const { ApplicationCommandOptionType } = require("discord.js");
const { GoogleGenAI } = require('@google/genai');

// Kh·ªüi t·∫°o GoogleGenAI client (l·∫•y kh√≥a API t·ª´ bi·∫øn m√¥i tr∆∞·ªùng)
// ƒê·∫£m b·∫£o GEMINI_API_KEY ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong file .env
const ai = new GoogleGenAI({ apiKey: process.env.GEMINI_API_KEY }); 

// ƒê·ªãnh nghƒ©a d·ªØ li·ªáu l·ªánh (data)
module.exports.data = {
    name: "h·ªèi",
    description: "H·ªèi AI (Gemini) b·∫•t k·ª≥ ƒëi·ªÅu g√¨ b·∫°n mu·ªën!",
    type: 1, // Lo·∫°i Chat Input Command
    
    options: [
        {
            name: "c√¢u-h·ªèi",
            description: "Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n.",
            // Lo·∫°i t√πy ch·ªçn: STRING (Chu·ªói vƒÉn b·∫£n)
            type: ApplicationCommandOptionType.String,
            required: true, 
            maxLength: 500 // Gi·ªõi h·∫°n ƒë·ªô d√†i c√¢u h·ªèi
        }
    ],
    
    integration_types: [0, 1],
    contexts: [0, 1, 2],
};

// H√†m th·ª±c thi l·ªánh (execute)
module.exports.execute = async (interaction, client) => {
    // 1. L·∫•y c√¢u h·ªèi t·ª´ ng∆∞·ªùi d√πng
    const prompt = interaction.options.getString("c√¢u-h·ªèi"); 
    
    // G·ª≠i ph·∫£n h·ªìi t·∫°m th·ªùi ngay l·∫≠p t·ª©c ƒë·ªÉ ng∆∞·ªùi d√πng bi·∫øt bot ƒëang x·ª≠ l√Ω
    // L·ªánh AI th∆∞·ªùng m·∫•t v√†i gi√¢y.
    await interaction.deferReply(); 

    try {
        // 2. G·ªçi Gemini API
        const response = await ai.models.generateContent({
            model: "gemini-2.5-flash", // M√¥ h√¨nh ph√π h·ª£p cho t√°c v·ª• chat
            contents: prompt,
        });

        // 3. L·∫•y n·ªôi dung ph·∫£n h·ªìi t·ª´ AI
        const aiResponseText = response.text.trim();

        // 4. G·ª≠i k·∫øt qu·∫£ tr·ªü l·∫°i Discord
        await interaction.editReply({
            content: `**‚ùì B·∫°n h·ªèi:** ${prompt}\n\n**ü§ñ Gemini tr·∫£ l·ªùi:**\n${aiResponseText}`
        });

    } catch (error) {
        console.error("L·ªói khi g·ªçi Gemini API:", error);
        
        // G·ª≠i th√¥ng b√°o l·ªói n·∫øu c√≥ s·ª± c·ªë
        await interaction.editReply({
            content: "Xin l·ªói, ƒë√£ x·∫£y ra l·ªói khi k·∫øt n·ªëi v·ªõi AI. Vui l√≤ng ki·ªÉm tra kh√≥a API v√† log bot.",
            ephemeral: true // Ch·ªâ hi·ªÉn th·ªã cho ng∆∞·ªùi d√πng g·ªçi l·ªánh
        });
    }
};